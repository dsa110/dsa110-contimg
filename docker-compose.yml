# DSA-110 Continuum Imaging Pipeline Docker Compose
# Production-ready multi-service deployment

version: '3.3'

services:
  # Redis for state management and message queuing
  redis:
    image: redis:7-alpine
    container_name: dsa110-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dsa110-network

  # Pipeline main service
  pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dsa110-pipeline
    restart: unless-stopped
    ports:
      - "8080:8080"  # Health monitoring
      - "8081:8081"  # Monitoring dashboard
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ./output:/app/output
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/pipeline_config.yaml
      - DATA_PATH=/app/data
      - OUTPUT_PATH=/app/output
      - LOG_PATH=/app/logs
      - SECRET_KEY=dsa110-pipeline-secret-key-2024-production
      - JWT_SECRET=dsa110-jwt-secret-key-2024-production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dsa110-network

  # Data ingestion service
  data-ingestion:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dsa110-data-ingestion
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/pipeline_config.yaml
      - DATA_PATH=/app/data
      - LOG_PATH=/app/logs
    depends_on:
      - redis
    networks:
      - dsa110-network

  # Calibration service
  calibration:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dsa110-calibration
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/pipeline_config.yaml
      - DATA_PATH=/app/data
      - LOG_PATH=/app/logs
    depends_on:
      - redis
    networks:
      - dsa110-network

  # Imaging service
  imaging:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dsa110-imaging
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/pipeline_config.yaml
      - DATA_PATH=/app/data
      - LOG_PATH=/app/logs
    depends_on:
      - redis
    networks:
      - dsa110-network

  # Mosaicking service
  mosaicking:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dsa110-mosaicking
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/pipeline_config.yaml
      - DATA_PATH=/app/data
      - LOG_PATH=/app/logs
    depends_on:
      - redis
    networks:
      - dsa110-network

  # Photometry service
  photometry:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dsa110-photometry
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/pipeline_config.yaml
      - DATA_PATH=/app/data
      - LOG_PATH=/app/logs
    depends_on:
      - redis
    networks:
      - dsa110-network

  # Monitoring service
  monitoring:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dsa110-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"  # Prometheus metrics
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/pipeline_config.yaml
      - DATA_PATH=/app/data
      - LOG_PATH=/app/logs
    depends_on:
      - redis
    networks:
      - dsa110-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: dsa110-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - pipeline
      - monitoring
    networks:
      - dsa110-network

volumes:
  redis_data:
    driver: local

networks:
  dsa110-network:
    driver: bridge