# DSA-110 Pipeline Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: dsa110-config
  namespace: dsa110-pipeline
data:
  pipeline_config.yaml: |
    # DSA-110 Pipeline Configuration
    pipeline:
      name: "DSA-110 Continuum Imaging Pipeline"
      version: "1.0.0"
      environment: "production"
      
    # Data paths
    paths:
      data_dir: "/app/data"
      output_dir: "/app/output"
      log_dir: "/app/logs"
      config_dir: "/app/config"
      
    # Pipeline stages
    stages:
      data_ingestion:
        enabled: true
        max_concurrent: 2
        block_duration_hours: 1.0
        
      calibration:
        enabled: true
        max_concurrent: 2
        sky_model_path: "/app/config/sky_models"
        
      imaging:
        enabled: true
        max_concurrent: 1
        cell_size: "3arcsec"
        image_size: [2400, 2400]
        
      mosaicking:
        enabled: true
        max_concurrent: 1
        mosaic_type: "optimal"
        
      photometry:
        enabled: true
        max_concurrent: 2
        aperture_radius: 3.0
        
    # Error handling
    error_handling:
      max_retries: 3
      retry_delay: 1.0
      circuit_breaker:
        failure_threshold: 5
        recovery_timeout: 60.0
        
    # Monitoring
    monitoring:
      enabled: true
      health_check_interval: 30
      metrics_port: 8080
      dashboard_port: 8081
      
    # Redis configuration
    redis:
      host: "dsa110-redis"
      port: 6379
      db: 0
      password: ""
      
    # Logging
    logging:
      level: "INFO"
      format: "json"
      file: "/app/logs/pipeline.log"
      max_size: "100MB"
      backup_count: 5
      
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream pipeline {
            server dsa110-pipeline:8080;
        }
        
        upstream monitoring {
            server dsa110-monitoring:8081;
        }
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                proxy_pass http://pipeline;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /monitoring/ {
                proxy_pass http://monitoring/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /health {
                proxy_pass http://pipeline/health;
                access_log off;
            }
        }
    }
